# Obfuscated with PyObfuscate
#ENCRYPTED BY :ANONYMOUS U7P4L
#VERSION :ALPHA
#GITHUB : https://github.com/U7P4L-IN
#FEEL THE POWER OF U7P4L...
# Time : Mon Aug  5 21:38:29 2024
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))